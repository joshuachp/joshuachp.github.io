<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>/dev/blog</title>
    <link>https://joshuachp.github.io/</link>
    <description>Recent content on /dev/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>Joshua Chapman</copyright>
    <lastBuildDate>Thu, 06 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://joshuachp.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>TryHackMe - Easy Peasy</title>
      <link>https://joshuachp.github.io/writeups/tryhackme-easy-peasy/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshuachp.github.io/writeups/tryhackme-easy-peasy/</guid>
      <description>Enumeration First we scan for open ports and services
Nmap We use nmap with some default arguments.
sudo nmap -sV -sC -oA nmap/first $IP It will return.
PORT STATE SERVICE VERSION 80/tcp open http nginx 1.16.1 | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: nginx/1.16.1 |_http-title: Welcome to nginx! From the first scan we can see that port 80 is open with nginx version 1.16.1
All ports So let&amp;rsquo;s retry for all ports -p- in the background, using -v to increase the verbosity and removing the scripts -sC and version -sV parameters.</description>
    </item>
    
    <item>
      <title>CyberChallengeIT CTF - Group Challenge</title>
      <link>https://joshuachp.github.io/posts/ccit-challenge/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://joshuachp.github.io/posts/ccit-challenge/</guid>
      <description>During the last week of preparation for che Cyber Challenge IT CTF, we were asked to do a CTF challenge our self. We were divided in groups and given a month to come up with a challenge.
Our group create an easy and guided challenge, since we were required to solve it in one hour. It will cover some basic aspect of all the kind of challenges types like Web Security, Reversing, Forensics, Cryptography.</description>
    </item>
    
    <item>
      <title>CORS Laravel</title>
      <link>https://joshuachp.github.io/posts/cors-laravel/</link>
      <pubDate>Wed, 02 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://joshuachp.github.io/posts/cors-laravel/</guid>
      <description>I want to talk about the problems that I have encountered setting up CORS between a Laravel backend server and a simple Html frontend hosted on a different domain, using the fetch API.
What is CORS  Cross-Origin Resource Sharing (CORS) is a mechanism that uses HTTP headers to tell browsers to give a web application running at one origin, access to selected resources from a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, or port) from its own.</description>
    </item>
    
  </channel>
</rss>