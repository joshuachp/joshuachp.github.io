<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Writeups on /dev/blog</title><link>https://joshuachp.github.io/writeups/</link><description>Recent content in Writeups on /dev/blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright><lastBuildDate>Sat, 10 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://joshuachp.github.io/writeups/index.xml" rel="self" type="application/rss+xml"/><item><title>Reply Challenge 2020 - That's what server says</title><link>https://joshuachp.github.io/writeups/reply-challenges-2020-that-is-what-server-says/</link><pubDate>Sat, 10 Oct 2020 00:00:00 +0000</pubDate><guid>https://joshuachp.github.io/writeups/reply-challenges-2020-that-is-what-server-says/</guid><description>This is the Writeup for the 300 points Web challenge for Reply Challenge CTF. During the CTF I and my team achieved first blood on this challenge. The challenge consists of finding a service endpoint on a web page, with a login API. Then you have to exploit an XXE (XML External Entities) Injection to get an LFI (Local File Inclusion) to get the sysadmin credentials to login on the service and get the flag.</description></item><item><title>TryHackMe - Blue</title><link>https://joshuachp.github.io/writeups/tryhackme-blue/</link><pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate><guid>https://joshuachp.github.io/writeups/tryhackme-blue/</guid><description>The room link can be found at TryHackMe - Blue
For this room, I will be using the Metasploit framework.
Recon We begin with a Nmap of the box to see the services and get their version.
msf5 &amp;gt; db_nmap -sC -sV 10.10.47.219 Now we can see all the running services with the services command.
msf5 &amp;gt; services Services ======== host port proto name state info ---- ---- ----- ---- ----- ---- 10.</description></item><item><title>TryHackMe - Vulnversity</title><link>https://joshuachp.github.io/writeups/tryhackme-vulnversity/</link><pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate><guid>https://joshuachp.github.io/writeups/tryhackme-vulnversity/</guid><description>The room link can be found at TryHackMe - Vulnversity
Reconnaissance Nmap First, we do a simple Nmap scan
PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 139/tcp open netbios-ssn 445/tcp open microsoft-ds 3128/tcp open squid-http 3333/tcp open dec-notes We find six ports open, we can now make a more in-depth scan with nmap -sC -sV $IP. It will found the service type and version.
PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.</description></item><item><title>TryHackMe - Easy Peasy</title><link>https://joshuachp.github.io/writeups/tryhackme-easy-peasy/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://joshuachp.github.io/writeups/tryhackme-easy-peasy/</guid><description>The room link can be found at TryHackMe - Easy Peasy
Enumeration First we scan for open ports and services
Nmap We use nmap with some default arguments.
sudo nmap -sV -sC -oA nmap/first $IP It will return.
PORT STATE SERVICE VERSION 80/tcp open http nginx 1.16.1 | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: nginx/1.16.1 |_http-title: Welcome to nginx! From the first scan we can see that port 80 is open with nginx version 1.</description></item></channel></rss>