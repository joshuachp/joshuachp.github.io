<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en-us"><generator uri="https://gohugo.io/" version="0.80.0">Hugo</generator><title type="html">Index on /dev/blog</title><link href="https://joshuachp.github.io/" rel="alternate" type="text/html" title="HTML"/><link href="https://joshuachp.github.io/index.xml" rel="alternate" type="application/rss+xml" title="RSS"/><link href="https://joshuachp.github.io/atom.xml" rel="self" type="application/atom+xml" title="Atom"/><updated>2021-01-15T12:54:39+01:00</updated><rights>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</rights><id>https://joshuachp.github.io/</id><entry><title type="html">Reply Challenge 2020 - That's what server says</title><link href="https://joshuachp.github.io/writeups/reply-challenges-2020-that-is-what-server-says/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://joshuachp.github.io/writeups/tryhackme-blue/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Blue"/><link href="https://joshuachp.github.io/writeups/tryhackme-vulnversity/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Vulnversity"/><link href="https://joshuachp.github.io/writeups/tryhackme-easy-peasy/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Easy Peasy"/><id>https://joshuachp.github.io/writeups/reply-challenges-2020-that-is-what-server-says/</id><published>2020-10-10T00:00:00+00:00</published><updated>2020-10-10T00:00:00+00:00</updated><content type="html">&lt;blockquote>Writeup for the 300 points Web challenge for Reply Challenge CTF&lt;/blockquote>This is the Writeup for the 300 points Web challenge for Reply Challenge CTF. During the CTF I and my team achieved first blood on this challenge. The challenge consists of finding a service endpoint on a web page, with a login API. Then you have to exploit an XXE (XML External Entities) Injection to get an LFI (Local File Inclusion) to get the sysadmin credentials to login on the service and get the flag.</content><category scheme="https://joshuachp.github.io/tags/ctf" term="ctf" label="CTF"/></entry><entry><title type="html">TryHackMe - Blue</title><link href="https://joshuachp.github.io/writeups/tryhackme-blue/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://joshuachp.github.io/writeups/tryhackme-vulnversity/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Vulnversity"/><link href="https://joshuachp.github.io/writeups/tryhackme-easy-peasy/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Easy Peasy"/><id>https://joshuachp.github.io/writeups/tryhackme-blue/</id><published>2020-09-03T00:00:00+00:00</published><updated>2020-09-03T00:00:00+00:00</updated><content type="html"><![CDATA[<blockquote>Deploy &amp; hack into a Windows machine, leveraging common misconfigurations issues.</blockquote><blockquote>
<p>The room link can be found at
<a href="https://tryhackme.com/room/blue">TryHackMe - Blue</a></p>
</blockquote>
<p>For this room, I will be using the Metasploit framework.</p>
<h2 id="recon">Recon</h2>
<p>We begin with a Nmap of the box to see the services and get their version.</p>
<div class="highlight"><pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">msf5 &gt; db_nmap -sC -sV 10.10.47.219
</code></pre></div><p>Now we can see all the running services with the <code>services</code> command.</p>
<div class="highlight"><pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">msf5 &gt; services
<span style="color:#40ffff">Services</span>
========

host           port   proto  name               state  info
----           ----   -----  ----               -----  ----
10.10.47.219   <span style="color:#3677a9">135</span>    tcp    msrpc              open   Microsoft Windows RPC
10.10.47.219   <span style="color:#3677a9">139</span>    tcp    netbios-ssn        open   Microsoft Windows netbios-ssn
10.10.47.219   <span style="color:#3677a9">445</span>    tcp    microsoft-ds       open   Windows <span style="color:#3677a9">7</span> Professional <span style="color:#3677a9">7601</span> Service Pack <span style="color:#3677a9">1</span> microsoft-ds workgroup: WORKGROUP
10.10.47.219   <span style="color:#3677a9">3389</span>   tcp    ssl/ms-wbt-server  open
10.10.47.219   <span style="color:#3677a9">49152</span>  tcp    msrpc              open   Microsoft Windows RPC
10.10.47.219   <span style="color:#3677a9">49153</span>  tcp    msrpc              open   Microsoft Windows RPC
10.10.47.219   <span style="color:#3677a9">49154</span>  tcp    msrpc              open   Microsoft Windows RPC
10.10.47.219   <span style="color:#3677a9">49158</span>  tcp    msrpc              open   Microsoft Windows RPC
10.10.47.219   <span style="color:#3677a9">49160</span>  tcp    msrpc              open   Microsoft Windows RPC

</code></pre></div><p>On this machine, we will focus on the <strong>SMB</strong> service which is on port <code>445</code>.</p>
<p>We can gather more information using the module
<code>auxiliary/scanner/smb/smb_version</code>. Running it the services page will lock more
like this.</p>
<div class="highlight"><pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">10.10.47.219  <span style="color:#3677a9">445</span>    tcp    smb                open   Windows <span style="color:#3677a9">7</span> Professional SP1 (build:7601) (name:JON-PC) (workgroup:WORKGROUP ) (signatures:optional)
</code></pre></div><p>Also we run <code>auxiliary/scanner/smb/smb1</code> to check if the box has support for
SMBv1.</p>
<div class="highlight"><pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">msf5 auxiliary(scanner/smb/smb1) &gt; run

[+] 10.10.47.219:445      - 10.10.47.219 supports SMBv1 dialect.
[*] 10.10.47.219:445      - Scanned <span style="color:#3677a9">1</span> of <span style="color:#3677a9">1</span> hosts (100% <span style="color:#24909d">complete</span>)
[*] Auxiliary module execution completed

</code></pre></div><p>As the machine name implies the box could be exploitable via <strong>EternalBlue</strong>.
Since the machine has <strong>Windows 7</strong> installed and <strong>SMBv1</strong> enabled, it is most
likely vulnerable. You can read more here
<a href="https://docs.microsoft.com/en-us/security-updates/SecurityBulletins/2017/ms17-010">Microsoft - EternalBlue</a>.</p>
<p>We can check if the machine is vulnerable by running the module
<code>auxiliary/scanner/smb/smb_ms17_010</code>.</p>
<div class="highlight"><pre style="color:#d0d0d0;background-color:#202020;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; run

[+] 10.10.47.219:445      - Host is likely VULNERABLE to MS17-010! - Windows <span style="color:#3677a9">7</span> Professional <span style="color:#3677a9">7601</span> Service Pack <span style="color:#3677a9">1</span> x64 (64-bit)
[*] 10.10.47.219:445      - Scanned <span style="color:#3677a9">1</span> of <span style="color:#3677a9">1</span> hosts (100% <span style="color:#24909d">complete</span>)
[*] Auxiliary module execution completed

</code></pre></div>]]></content><category scheme="https://joshuachp.github.io/tags/ctf" term="ctf" label="CTF"/><category scheme="https://joshuachp.github.io/tags/thm" term="thm" label="THM"/></entry><entry><title type="html">TryHackMe - Vulnversity</title><link href="https://joshuachp.github.io/writeups/tryhackme-vulnversity/?utm_source=atom_feed" rel="alternate" type="text/html"/><link href="https://joshuachp.github.io/writeups/tryhackme-easy-peasy/?utm_source=atom_feed" rel="related" type="text/html" title="TryHackMe - Easy Peasy"/><id>https://joshuachp.github.io/writeups/tryhackme-vulnversity/</id><published>2020-09-02T00:00:00+00:00</published><updated>2020-09-02T00:00:00+00:00</updated><content type="html">&lt;blockquote>Learn about active recon, web app attacks and privilege escalation.&lt;/blockquote>The room link can be found at TryHackMe - Vulnversity
Reconnaissance Nmap First, we do a simple Nmap scan
PORT STATE SERVICE 21/tcp open ftp 22/tcp open ssh 139/tcp open netbios-ssn 445/tcp open microsoft-ds 3128/tcp open squid-http 3333/tcp open dec-notes We find six ports open, we can now make a more in-depth scan with nmap -sC -sV $IP. It will found the service type and version.
PORT STATE SERVICE VERSION 21/tcp open ftp vsftpd 3.</content><category scheme="https://joshuachp.github.io/tags/ctf" term="ctf" label="CTF"/><category scheme="https://joshuachp.github.io/tags/thm" term="thm" label="THM"/></entry><entry><title type="html">TryHackMe - Easy Peasy</title><link href="https://joshuachp.github.io/writeups/tryhackme-easy-peasy/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://joshuachp.github.io/writeups/tryhackme-easy-peasy/</id><published>2020-08-06T00:00:00+00:00</published><updated>2020-08-06T00:00:00+00:00</updated><content type="html">&lt;blockquote>Writeup for the TryHackMe room Easy Peasy, a CTF like voulerable machine.&lt;/blockquote>The room link can be found at TryHackMe - Easy Peasy
Enumeration First we scan for open ports and services
Nmap We use nmap with some default arguments.
sudo nmap -sV -sC -oA nmap/first $IP It will return.
PORT STATE SERVICE VERSION 80/tcp open http nginx 1.16.1 | http-robots.txt: 1 disallowed entry |_/ |_http-server-header: nginx/1.16.1 |_http-title: Welcome to nginx! From the first scan we can see that port 80 is open with nginx version 1.</content><category scheme="https://joshuachp.github.io/tags/ctf" term="ctf" label="CTF"/><category scheme="https://joshuachp.github.io/tags/thm" term="thm" label="THM"/></entry><entry><title type="html">CyberChallengeIT CTF - Group Challenge</title><link href="https://joshuachp.github.io/posts/ccit-challenge/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://joshuachp.github.io/posts/ccit-challenge/</id><published>2020-01-06T00:00:00+00:00</published><updated>2020-01-06T00:00:00+00:00</updated><content type="html">&lt;blockquote>An easy and guided CTF Challenge with writeup created for the 2020 CyberChallenge Italy.&lt;/blockquote>During the last week of preparation for che Cyber Challenge IT CTF, we were asked to do a CTF challenge our self. We were divided in groups and given a month to come up with a challenge.
Our group create an easy and guided challenge, since we were required to solve it in one hour. It will cover some basic aspect of all the kind of challenges types like Web Security, Reversing, Forensics, Cryptography.</content></entry><entry><title type="html">CORS Laravel</title><link href="https://joshuachp.github.io/posts/cors-laravel/?utm_source=atom_feed" rel="alternate" type="text/html"/><id>https://joshuachp.github.io/posts/cors-laravel/</id><published>2019-10-02T00:00:00+00:00</published><updated>2019-10-02T00:00:00+00:00</updated><content type="html">&lt;blockquote>Implementation of a simple CORS middleware for Laravel Php framework&lt;/blockquote>I want to talk about the problems that I have encountered setting up CORS between a Laravel backend server and a simple Html frontend hosted on a different domain, using the fetch API.
What is CORS Cross-Origin Resource Sharing (CORS) is a mechanism that uses HTTP headers to tell browsers to give a web application running at one origin, access to selected resources from a different origin. A web application executes a cross-origin HTTP request when it requests a resource that has a different origin (domain, protocol, or port) from its own.</content></entry></feed>