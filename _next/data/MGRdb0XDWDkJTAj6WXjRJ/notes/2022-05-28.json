{"pageProps":{"path":"2022-05-28","article":{"title":"Jouranl 2022-05-28","description":null,"tags":["journal"],"date":"2022-05-28","draft":false,"language":"en","content":[{"Start":{"Heading":["H1",null,[]]}},{"Text":"Journal 2022-05-28"},{"End":{"Heading":["H1",null,[]]}},{"Html":"<!-- Morning -->\n"},{"Html":"<!-- What do I want to do today? -->\n"},{"Html":"<!-- Evening -->\n"},{"Html":"<!-- What did I learn today? -->\n"},{"Html":"<!-- Things I learned -->\n"},{"Html":"<!-- Useful tools and libraries -->\n"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Rust"},{"End":{"Heading":["H2",null,[]]}},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Iterator and IntoIter traits"},{"End":{"Heading":["H3",null,[]]}},{"Start":{"List":null}},{"Start":"Item"},{"Text":"The "},{"Code":"Iterator"},{"Text":" trait is used to iterate over collections."},{"End":"Item"},{"Start":"Item"},{"Text":"The "},{"Code":"Iterator"},{"Text":" implements a "},{"Code":"next()"},{"Text":" method which returns an "},{"Code":"Option<T>"},{"Text":" next"},"SoftBreak",{"Text":"item in the collection."},{"End":"Item"},{"Start":"Item"},{"Text":"If you have a data structure that can be iterated over, you have to implement"},"SoftBreak",{"Text":"the "},{"Code":"IntoIter"},{"Text":" trait to iterate over it."},{"Start":{"List":null}},{"Start":"Item"},{"Text":"The "},{"Code":"IntoIter"},{"Text":" returns an "},{"Code":"Iterator"},{"Text":" over the elements in the collection."},{"End":"Item"},{"Start":"Item"},{"Text":"The "},{"Code":"Iterator"},{"Text":" will be an additional structure that keeps track of the"},"SoftBreak",{"Text":"current element in the collection and returns it when "},{"Code":"next()"},{"Text":" is called,"},"SoftBreak",{"Text":"and then moves to the next element in the collection."},{"End":"Item"},{"Start":"Item"},{"Text":"If a type implements "},{"Code":"IntoIter"},{"Text":" (or "},{"Code":"Iterator"},{"Text":") you can use it in a for"},"SoftBreak",{"Text":"loop"},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"Start":"Item"},{"Text":"You have to implement different type of "},{"Code":"Iterator"},{"Text":" structures for the each"},"SoftBreak",{"Text":"type or reference type you have."},{"End":"Item"},{"Start":"Item"},{"Text":"An example of an iterabile data structure is a slice "},{"Code":"[T]"},{"Start":{"List":null}},{"Start":"Item"},{"Text":"You can iterate the elements of the slice"},{"End":"Item"},{"Start":"Item"},{"Text":"Slice implements"},{"Code":"IntoIte"},{"Text":" for the for the following types"},{"Start":{"List":null}},{"Start":"Item"},{"Code":"iml IntoTier<Iter> for &[T]"},{"Start":{"List":null}},{"Start":"Item"},{"Code":"Iter"},{"Text":" will yield "},{"Code":"&T"},{"Text":" items from a reference to a slice"},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"Start":"Item"},{"Code":"iml IntoTier<IterMut> for &mut [T]"},{"Start":{"List":null}},{"Start":"Item"},{"Code":"IterMut"},{"Text":" will yield "},{"Code":"&mut T"},{"Text":" items from a mutable reference to a slice"},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"Start":"Item"},{"Code":"iml IntoTier<IntoIter> for [T]"},{"Start":{"List":null}},{"Start":"Item"},{"Code":"IntoIter"},{"Text":" will yield "},{"Code":"T"},{"Text":" items from an owned slice"},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"Start":"Item"},{"Text":"Also "},{"Code":"Vec<T>"},{"Text":" is an example, but it leverages the slice type to iterate; in"},"SoftBreak",{"Text":"other words it implements "},{"Code":"IntoIter"},{"Text":" to the slices "},{"Code":"Iterator"},{"Text":" types."},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"Start":"Item"},{"Text":"This design pattern is good to implement iterations for any structures"},{"End":"Item"},{"Start":"Item"},{"Text":"The hardest part is to implement "},{"Code":"Iterator"},{"Text":" for "},{"Code":"IterMut"},{"Text":" which yields"},"SoftBreak",{"Code":"&mut T"},{"Start":{"List":null}},{"Start":"Item"},{"Text":"This will give you a lot of headaches if your using safe Rust since you are"},"SoftBreak",{"Text":"returning mutable reference that are behind a mutable reference to the"},"SoftBreak",{"Text":"collection."},{"End":"Item"},{"Start":"Item"},{"Text":"A good blog post (even if a bit old) is:"},"SoftBreak",{"Start":{"Link":["Inline","https://smallcultfollowing.com/babysteps/blog/2013/10/24/iterators-yielding-mutable-references/",""]}},{"Text":"Iterators yielding mutable references"},{"End":{"Link":["Inline","https://smallcultfollowing.com/babysteps/blog/2013/10/24/iterators-yielding-mutable-references/",""]}},{"End":"Item"},{"Start":"Item"},{"Text":"Good md-book:"},"SoftBreak",{"Start":{"Link":["Inline","https://rust-unofficial.github.io/too-many-lists/second-iter-mut.html",""]}},{"Text":"Too many Lists"},{"End":{"Link":["Inline","https://rust-unofficial.github.io/too-many-lists/second-iter-mut.html",""]}},{"End":"Item"},{"End":{"List":null}},{"End":"Item"},{"End":{"List":null}}]}},"__N_SSG":true}