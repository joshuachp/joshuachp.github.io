{"pageProps":{"path":"2023-02-22","article":{"title":"Jouranl 2023-02-22","description":null,"tags":["journal"],"date":"2023-02-22","draft":false,"language":"en","content":[{"Start":{"Heading":["H1",null,[]]}},{"Text":"Journal 2023-02-22"},{"End":{"Heading":["H1",null,[]]}},{"Start":{"Heading":["H2",null,[]]}},{"Text":"C/CPP programming in Nix"},{"End":{"Heading":["H2",null,[]]}},{"Start":"Paragraph"},{"Text":"NixOS has a lot of advantages to program in C/CPP. The version of each library"},"SoftBreak",{"Text":"and compiler is pinned by the nix package manager and each build is"},"SoftBreak",{"Text":"reproducible."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"The problem begins when you are in a development environment. If you want to"},"SoftBreak",{"Text":"compile your project with clang you have to setup the environment correctly. I"},"SoftBreak",{"Text":"had problems with just specifying clang as a package in the nix shell:"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"nix"}}},{"Text":"{\n    devShells.x86_64-linux.default = pkgs.mkShell {\n        packages = with pkgs; [\n            clang\n            clang-tools\n        ];\n    };\n}\n"},{"End":{"CodeBlock":{"Fenced":"nix"}}},{"Start":"Paragraph"},{"Text":"The problem was that "},{"Code":"clangd"},{"Text":" (the LSP) was not able to find the standard"},"SoftBreak",{"Text":"library. The best solution was to follow the NixOs wiki"},"SoftBreak",{"Start":{"Link":["Inline","https://nixos.wiki/wiki/Using_Clang_instead_of_GCC",""]}},{"Text":"Using Clang instead of GCC"},{"End":{"Link":["Inline","https://nixos.wiki/wiki/Using_Clang_instead_of_GCC",""]}},{"Text":","},"SoftBreak",{"Text":"but since "},{"Code":"mkShell"},{"Text":" gets the stdenv as an input"},{"FootnoteReference":"1"},{"Text":", I need to override it."},"SoftBreak",{"Text":"This is what I came up with:"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"nix"}}},{"Text":"{\n    devShells.x86_64-linux.default = pkgs.mkShell.override { inherit (pkgs.llvmPackages) stdenv; } {\n        packages = with pkgs; [\n            clang-tools\n        ];\n    };\n}\n"},{"End":{"CodeBlock":{"Fenced":"nix"}}},{"Start":{"FootnoteDefinition":"1"}},{"Start":{"CodeBlock":"Indented"}},{"Text":"[mkShell](https://github.com/NixOS/nixpkgs/blob/fb3a27fade656122e28afde3d8263e933f54ed93/pkgs/build-support/mkshell/default.nix#L1)\n"},{"End":{"CodeBlock":"Indented"}},{"End":{"FootnoteDefinition":"1"}}]}},"__N_SSG":true}