{"pageProps":{"article":{"title":"CORS Laravel","tags":["php","laravel","CORS"],"description":"Implementation of a simple CORS middleware for Laravel Php framework","language":null,"content":[{"Start":{"Heading":["H1",null,[]]}},{"Text":"CORS Laravel"},{"End":{"Heading":["H1",null,[]]}},{"Start":"Paragraph"},{"Text":"I want to talk about the problems that I have encountered setting up CORS"},"SoftBreak",{"Text":"between a Laravel backend server and a simple Html frontend hosted on a"},"SoftBreak",{"Text":"different domain, using the fetch API."},{"End":"Paragraph"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"What is CORS"},{"End":{"Heading":["H2",null,[]]}},{"Start":"BlockQuote"},{"Start":"Paragraph"},{"Start":"Strong"},{"Text":"Cross-Origin Resource Sharing (CORS)"},{"End":"Strong"},{"Text":" is a mechanism that uses HTTP"},"SoftBreak",{"Text":"headers to tell browsers to give a web application running at one origin,"},"SoftBreak",{"Text":"access to selected resources from a different origin. A web application"},"SoftBreak",{"Text":"executes a cross-origin HTTP request when it requests a resource that has a"},"SoftBreak",{"Text":"different origin (domain, protocol, or port) from its own."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Html":"<cite>"},{"Start":{"Link":["Inline","https://developer.mozilla.org/docs/Web/HTTP/CORS",""]}},{"Text":"MDN Web docs"},{"End":{"Link":["Inline","https://developer.mozilla.org/docs/Web/HTTP/CORS",""]}},{"Html":"</cite>"},{"End":"Paragraph"},{"End":"BlockQuote"},{"Start":"Paragraph"},{"Text":"An example is having a backend server in a domain different from the frontend."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"Eg. "},{"Code":"example.com admin.example.com"},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"The browsers will block all the requests cross-domain and throw an error. This"},"SoftBreak",{"Text":"issue is also present in development because the server and frontend must be"},"SoftBreak",{"Text":"hosted on different ports (Like "},{"Code":"localhost:8080"},{"Text":" and "},{"Code":"localhost:8000"},{"Text":")."},{"End":"Paragraph"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Implementation"},{"End":{"Heading":["H2",null,[]]}},{"Start":"Paragraph"},{"Text":"The best place to read the implementation of CORS is"},"SoftBreak",{"Start":{"Link":["Inline","https://developer.mozilla.org/docs/Web/HTTP/CORS",""]}},{"Text":"MDN Web Docs"},{"End":{"Link":["Inline","https://developer.mozilla.org/docs/Web/HTTP/CORS",""]}},{"Text":". Most of the"},"SoftBreak",{"Text":"setup on the frontend is already done by "},{"Start":"Strong"},{"Text":"fetch"},{"End":"Strong"},{"Text":". The first step in the CORS"},"SoftBreak",{"Text":"mechanism is a "},{"Start":"Strong"},{"Text":"Preflighted request"},{"End":"Strong"},{"Text":"."},{"End":"Paragraph"},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Preflighted request"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"The "},{"Start":"Strong"},{"Text":"Preflighted request"},{"End":"Strong"},{"Text":" is an "},{"Code":"OPTIONS"},{"Text":" request that checks if the backend"},"SoftBreak",{"Text":"server understands the necessary headers."},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"The headers are:"},{"End":"Paragraph"},{"Start":{"List":null}},{"Start":"Item"},{"Text":"Access-Control-Request-Method"},{"End":"Item"},{"Start":"Item"},{"Text":"Access-Control-Request-Headers"},{"End":"Item"},{"Start":"Item"},{"Text":"Origin"},{"End":"Item"},{"End":{"List":null}},{"Start":{"Heading":["H4",null,[]]}},{"Text":"Request"},{"End":{"Heading":["H4",null,[]]}},{"Start":"Paragraph"},{"Text":"I needed to make an Ajax "},{"Code":"POST"},{"Text":" request for some resources. I would send and"},"SoftBreak",{"Text":"receive data in json format. The preflighted request would look something like"},"SoftBreak",{"Text":"this:"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"http"}}},{"Text":"GET /data/ HTTP/1.1\nHost: admin.example.com\nUser-Agent: Mozilla/5.0 (...) Gecko/20100101 Firefox\nAccept: */*\nAccept-Language: en-us,en;q=0.5\nAccept-Encoding: gzip,deflate\nConnection: keep-alive\nOrigin: https://example.com\n"},{"End":{"CodeBlock":{"Fenced":"http"}}},{"Start":"Paragraph"},{"Text":"With the fetch API"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"javascript"}}},{"Text":"fetch.ajax('admin.example.com', {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify({\n            data: 'data',\n        });\n"},{"End":{"CodeBlock":{"Fenced":"javascript"}}},{"Start":{"Heading":["H3",null,[]]}},{"Text":"Laravel API"},{"End":{"Heading":["H3",null,[]]}},{"Start":"Paragraph"},{"Text":"On the API side on Laravel we need to use a Middleware to intercept the"},"SoftBreak",{"Code":"OPTION"},{"Text":" request and add the necessary headers:"},{"End":"Paragraph"},{"Start":{"List":null}},{"Start":"Item"},{"Text":"Access-Control-Allow-Origin"},{"End":"Item"},{"Start":"Item"},{"Text":"Access-Control-Allow-Methods"},{"End":"Item"},{"Start":"Item"},{"Text":"Access-Control-Allow-Headers"},{"End":"Item"},{"End":{"List":null}},{"Start":"Paragraph"},{"Text":"We can do it two ways. Using a custom Middleware created on your own, for"},"SoftBreak",{"Text":"simple testing, or the more complete plugin"},"SoftBreak",{"Start":{"Link":["Inline","https://github.com/barryvdh/laravel-cors",""]}},{"Text":"barryvdh/laravel-cors"},{"End":{"Link":["Inline","https://github.com/barryvdh/laravel-cors",""]}},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"You can find the implementation of the custom Middleware in this"},"SoftBreak",{"Start":{"Link":["Inline","https://stackoverflow.com/a/33090515",""]}},{"Text":"Stack Overflow answer"},{"End":{"Link":["Inline","https://stackoverflow.com/a/33090515",""]}},{"Text":". The code is:"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"php"}}},{"Text":"<?php namespace App\\Http\\Middleware;\n\nuse Closure;\n\nclass CORS {\n\n    /**\n     * Handle an incoming request.\n     *\n     * @param  \\Illuminate\\Http\\Request  $request\n     * @param  \\Closure  $next\n     * @return mixed\n     */\n    public function handle($request, Closure $next)\n    {\n\n        header(\"Access-Control-Allow-Origin: *\");\n\n        // ALLOW OPTIONS METHOD\n        $headers = [\n            'Access-Control-Allow-Methods'=> 'POST, GET, OPTIONS, PUT, DELETE',\n            'Access-Control-Allow-Headers'=> 'Content-Type, X-Auth-Token, Origin'\n        ];\n        if($request->getMethod() == \"OPTIONS\") {\n            // The client-side application can set headers allowed in Access-Control-Allow-Headers\n            return Response::make('OK', 200, $headers);\n        }\n\n        $response = $next($request);\n        foreach($headers as $key => $value)\n            $response->header($key, $value);\n        return $response;\n    }\n}\n"},{"End":{"CodeBlock":{"Fenced":"php"}}},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Issue"},{"End":{"Heading":["H2",null,[]]}},{"Start":"Paragraph"},{"Text":"After adding the Middleware I had still issues with the browser blocking the"},"SoftBreak",{"Text":"request. The response to the Preflighted Request had a 200 Status Code, but no"},"SoftBreak",{"Text":"CORS headers. After some digging, I found out that Laravel returns an html page"},"SoftBreak",{"Text":"if you don"},{"Text":"â€™"},{"Text":"t specify a return type "},{"Code":"Accept-Content: application/json"},{"Text":" in the"},"SoftBreak",{"Text":"request and it will result in a 302 redirect to the page which will blocked by"},"SoftBreak",{"Text":"default from the browser. So in the fetch function, we need to add the request"},"SoftBreak",{"Text":"and response content-type headers:"},{"End":"Paragraph"},{"Start":"Paragraph"},{"Text":"With the fetch API"},{"End":"Paragraph"},{"Start":{"CodeBlock":{"Fenced":"javascript"}}},{"Text":"fetch.ajax(\"admin.example.com\", {\n    method: \"POST\",\n    mode: \"cors\",\n    headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n    },;:\n    body: JSON.stringify({\n        data: \"data\"\n    })\n});\n"},{"End":{"CodeBlock":{"Fenced":"javascript"}}},{"Start":"Paragraph"},{"Text":"An alternative would be to use a different package like"},"SoftBreak",{"Start":{"Link":["Inline","https://github.com/axios/axios",""]}},{"Text":"axios"},{"End":{"Link":["Inline","https://github.com/axios/axios",""]}},{"Text":" that automatically sets the header for"},"SoftBreak",{"Text":"the content-type and"},"SoftBreak",{"Start":{"Link":["Inline","https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",""]}},{"Text":"XMLHttpRequest"},{"End":{"Link":["Inline","https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",""]}},"SoftBreak",{"Text":"for Laravel to recognize the request as ajax."},{"End":"Paragraph"},{"Start":{"Heading":["H2",null,[]]}},{"Text":"Conclusion"},{"End":{"Heading":["H2",null,[]]}},{"Start":"Paragraph"},{"Text":"In conclusion, I suggest the use of the plug-in"},"SoftBreak",{"Start":{"Link":["Inline","https://github.com/barryvdh/laravel-cors",""]}},{"Text":"barryvdh/laravel-cors"},{"End":{"Link":["Inline","https://github.com/barryvdh/laravel-cors",""]}},{"Text":" for the best"},"SoftBreak",{"Text":"configuration and features."},{"End":"Paragraph"}]}},"__N_SSG":true}